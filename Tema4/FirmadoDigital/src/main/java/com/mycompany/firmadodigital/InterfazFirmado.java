/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.firmadodigital;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.KeyPair;
import java.security.NoSuchAlgorithmException;
import java.security.Signature;
import java.security.spec.InvalidKeySpecException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Alberto
 */
public class InterfazFirmado extends javax.swing.JFrame {

    /**
     * Creates new form InterfazFirmado
     */
    public InterfazFirmado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblIntroduce = new javax.swing.JLabel();
        btnAdjuntar = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        mostrarFichero = new javax.swing.JTextField();
        btnValidar = new javax.swing.JButton();
        btnFirmar = new javax.swing.JButton();
        btnClaves = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Firma Digital");

        lblIntroduce.setText("Introduce un fichero");
        lblIntroduce.setEnabled(false);

        btnAdjuntar.setText("Adjuntar");
        btnAdjuntar.setEnabled(false);
        btnAdjuntar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdjuntarActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre del fichero");
        lblNombre.setEnabled(false);

        mostrarFichero.setEditable(false);
        mostrarFichero.setEnabled(false);

        btnValidar.setText("Validar fichero");
        btnValidar.setEnabled(false);
        btnValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarActionPerformed(evt);
            }
        });

        btnFirmar.setText("Firmar fichero");
        btnFirmar.setEnabled(false);
        btnFirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirmarActionPerformed(evt);
            }
        });

        btnClaves.setText("Generar claves");
        btnClaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClavesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIntroduce)
                            .addComponent(lblNombre))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdjuntar)
                            .addComponent(mostrarFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnClaves, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFirmar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnValidar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnClaves)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIntroduce)
                    .addComponent(btnAdjuntar))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(mostrarFichero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(btnFirmar)
                .addGap(18, 18, 18)
                .addComponent(btnValidar)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static String MENSAJE_ORIGINAL;
    private static String MENSAJE_MODIFICADO;
    private static byte[] firma;
    private static String path1;
    private static String path2;

    public static String leerFichero(String filePath) {
        String contenido = "";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                contenido.concat(linea).concat("\n");
            }
        } catch (IOException e) {
            System.err.println("Error al leer el archivo: " + e.getMessage());
        }

        return contenido;
    }

    public void activarInterfaz() {
        btnClaves.setVisible(false);
        lblNombre.setEnabled(true);
        lblIntroduce.setEnabled(true);
        btnFirmar.setEnabled(true);
        btnValidar.setEnabled(true);
        btnAdjuntar.setEnabled(true);
        mostrarFichero.setEnabled(true);
    }


    private void btnAdjuntarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdjuntarActionPerformed
        File currentDirectory = new File(System.getProperty("user.dir"));
        JFileChooser fileChooser = new JFileChooser(currentDirectory);
        int result = fileChooser.showOpenDialog(null);
        path1 = fileChooser.getSelectedFile().getAbsolutePath();

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            mostrarFichero.setText(selectedFile.getName());

        } else {
            mostrarFichero.setText("Fichero no encontrado");
        }

    }//GEN-LAST:event_btnAdjuntarActionPerformed

    private void btnValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarActionPerformed

        try {
            File currentDirectory = new File(System.getProperty("user.dir"));
            JFileChooser fileChooser = new JFileChooser(currentDirectory);
            int result = fileChooser.showOpenDialog(null);
            path2 = fileChooser.getSelectedFile().getAbsolutePath();
            
            MENSAJE_MODIFICADO = leerFichero(path1);

            Signature signature = Signature.getInstance("DSA");
            signature.initVerify(FirmadoDigital.getClavePublica(path2));
            signature.update(MENSAJE_MODIFICADO.getBytes());

            if (signature.verify(firma)) {
                JOptionPane.showMessageDialog(this,
                        "Mensaje verificado.",
                        "Mensaje",
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Atenci√≥n: el mensaje no es fiable.",
                        "Mensaje",
                        JOptionPane.WARNING_MESSAGE);
            }
            
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (InvalidKeySpecException e) {
            JOptionPane.showMessageDialog(this,
                    "No se puede usar la clave privada",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
        } catch (InvalidKeyException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnValidarActionPerformed

    private void btnFirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirmarActionPerformed
        
        MENSAJE_ORIGINAL = leerFichero(path1);
     
        try {
            Signature signature = Signature.getInstance("DSA");
            signature.initSign(FirmadoDigital.getClavePrivada());
            signature.update(MENSAJE_ORIGINAL.getBytes());
            firma = signature.sign();

            JOptionPane.showMessageDialog(null,
                    "Fichero firmado con √©xito.",
                    "Mensaje",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (InvalidKeyException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnFirmarActionPerformed

    private void btnClavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClavesActionPerformed
        try {
            FirmadoDigital fd = new FirmadoDigital();
            KeyPair claves = fd.generarClaves();
            fd.guardarClaves(claves);
            JOptionPane.showMessageDialog(null,
                    "Claves generadas con √©xito.",
                    "Mensaje",
                    JOptionPane.INFORMATION_MESSAGE);

            activarInterfaz();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnClavesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazFirmado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazFirmado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazFirmado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazFirmado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazFirmado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdjuntar;
    private javax.swing.JButton btnClaves;
    private javax.swing.JButton btnFirmar;
    private javax.swing.JButton btnValidar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblIntroduce;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTextField mostrarFichero;
    // End of variables declaration//GEN-END:variables
}
